{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shrey\\\\CascadeProjects\\\\tech-breaks-mental-health-app\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Helmet } from 'react-helmet';\nimport './App.css';\nimport { FiClock, FiCoffee, FiActivity, FiAlertCircle, FiCheckCircle, FiPause, FiPlay, FiSettings, FiVolume2, FiVolumeX, FiX, FiTarget, FiDroplet, FiEye, FiRefreshCw } from 'react-icons/fi';\n\n// Break activities data\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst breakActivities = [{\n  type: 'eye',\n  icon: /*#__PURE__*/_jsxDEV(FiEye, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 24\n  }, this),\n  activity: '20-20-20 Rule: Look 20ft away for 20s',\n  duration: 20\n}, {\n  type: 'stretch',\n  icon: /*#__PURE__*/_jsxDEV(FiRefreshCw, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 28\n  }, this),\n  activity: 'Shoulder rolls and neck stretches',\n  duration: 60\n}, {\n  type: 'walk',\n  icon: /*#__PURE__*/_jsxDEV(FiActivity, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 25\n  }, this),\n  activity: 'Take a short walk',\n  duration: 300\n}, {\n  type: 'water',\n  icon: /*#__PURE__*/_jsxDEV(FiDroplet, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 26\n  }, this),\n  activity: 'Drink water and stand up',\n  duration: 30\n}];\nfunction App() {\n  _s();\n  const [screenTime, setScreenTime] = useState(0);\n  const [breaks, setBreaks] = useState(0);\n  const [lastBreak, setLastBreak] = useState(0);\n  const [isTracking, setIsTracking] = useState(false);\n  const [isPaused, setIsPaused] = useState(false);\n  const [showSettings, setShowSettings] = useState(false);\n  const [breakTimer, setBreakTimer] = useState(0);\n  const [isOnBreak, setIsOnBreak] = useState(false);\n  const [notificationPermission, setNotificationPermission] = useState('default');\n  const [currentActivity, setCurrentActivity] = useState(null);\n  const workerRef = useRef(null);\n\n  // Statistics tracking\n  const [stats, setStats] = useState({\n    dailyScreenTime: 0,\n    weeklyScreenTime: 0,\n    totalBreaks: 0,\n    averageSessionLength: 0,\n    longestSession: 0,\n    streaks: 0,\n    lastUpdate: new Date().toISOString().split('T')[0]\n  });\n\n  // Pomodoro settings\n  const [pomodoro, setPomodoro] = useState({\n    enabled: false,\n    workDuration: 25,\n    breakDuration: 5,\n    longBreakDuration: 15,\n    sessionsBeforeLongBreak: 4,\n    currentSession: 0\n  });\n  const [settings, setSettings] = useState({\n    maxScreenTime: 120,\n    breakInterval: 30,\n    breakDuration: 5,\n    notificationsEnabled: true,\n    soundEnabled: true,\n    pomodoroEnabled: false,\n    waterReminders: true,\n    exerciseReminders: true,\n    dailyGoal: 480 // 8 hours\n  });\n\n  // Ensure worker and onmessage are set up only once\n  useEffect(() => {\n    workerRef.current = new Worker('timeWorker.js'); // Use public folder worker\n    workerRef.current.onmessage = e => {\n      if (e.data.type === 'tick') {\n        if (isTracking && !isPaused && !isOnBreak) {\n          setScreenTime(prev => prev + 1);\n          setLastBreak(prev => prev + 1);\n          setStats(prev => ({\n            ...prev,\n            dailyScreenTime: prev.dailyScreenTime + 1,\n            weeklyScreenTime: prev.weeklyScreenTime + 1,\n            averageSessionLength: Math.round((prev.dailyScreenTime + 1) / (prev.totalBreaks + 1)),\n            longestSession: Math.max(prev.longestSession, screenTime + 1)\n          }));\n        } else if (isOnBreak) {\n          setBreakTimer(prev => {\n            const newTimer = prev - 1;\n            if (newTimer <= 0) {\n              endBreak();\n              return 0;\n            }\n            return newTimer;\n          });\n        }\n      }\n    };\n    return () => {\n      workerRef.current.terminate();\n    };\n  }, []);\n\n  // Update toggleTracking to only send start/stop commands\n  const toggleTracking = () => {\n    if (!isTracking) {\n      setScreenTime(0); // Reset timer to 0 on start\n      setIsTracking(true);\n      setIsPaused(false);\n      workerRef.current.postMessage({\n        command: 'start'\n      });\n      console.log('Tracking started');\n      showNotification(\"Tracking Started\", \"Screen time tracking has begun.\", false);\n    } else {\n      setIsTracking(false);\n      setIsPaused(false);\n      workerRef.current.postMessage({\n        command: 'stop'\n      });\n      console.log('Tracking stopped');\n      showNotification(\"Tracking Stopped\", \"Screen time tracking has stopped.\", false);\n    }\n  };\n\n  // Load saved stats from localStorage\n  useEffect(() => {\n    const savedStats = localStorage.getItem('techBreaksStats');\n    const savedSettings = localStorage.getItem('techBreaksSettings');\n    if (savedStats) {\n      const parsedStats = JSON.parse(savedStats);\n      // Reset daily stats if it's a new day\n      if (parsedStats.lastUpdate !== new Date().toISOString().split('T')[0]) {\n        setStats(prev => ({\n          ...prev,\n          dailyScreenTime: 0,\n          totalBreaks: 0,\n          lastUpdate: new Date().toISOString().split('T')[0]\n        }));\n      } else {\n        setStats(parsedStats);\n      }\n    }\n    if (savedSettings) {\n      setSettings(JSON.parse(savedSettings));\n    }\n  }, []);\n\n  // Save stats to localStorage when updated\n  useEffect(() => {\n    localStorage.setItem('techBreaksStats', JSON.stringify(stats));\n  }, [stats]);\n\n  // Save settings to localStorage when updated\n  useEffect(() => {\n    localStorage.setItem('techBreaksSettings', JSON.stringify(settings));\n  }, [settings]);\n\n  // Remove document visibility change handler since we're using Web Worker\n  useEffect(() => {\n    const handleVisibilityChange = () => {\n      // Only handle notifications when tab becomes visible\n      if (!document.hidden && isTracking) {\n        const screenTimeMinutes = screenTime / 60;\n        if (screenTimeMinutes >= settings.maxScreenTime) {\n          showNotification(\"Maximum Screen Time Reached!\", \"You've reached your maximum screen time limit. Consider taking a longer break.\", true);\n        }\n      }\n    };\n    document.addEventListener(\"visibilitychange\", handleVisibilityChange);\n    return () => document.removeEventListener(\"visibilitychange\", handleVisibilityChange);\n  }, [isTracking, screenTime, settings]);\n\n  // Request notification permission on mount\n  useEffect(() => {\n    const requestNotificationPermission = async () => {\n      if (\"Notification\" in window) {\n        try {\n          const permission = await Notification.requestPermission();\n          setNotificationPermission(permission);\n        } catch (error) {\n          console.error('Error requesting notification permission:', error);\n          setNotificationPermission('denied');\n        }\n      }\n    };\n    requestNotificationPermission();\n  }, []);\n  const showNotification = (title, body, playSound = false) => {\n    if (settings.notificationsEnabled && notificationPermission === 'granted') {\n      try {\n        new Notification(title, {\n          body,\n          icon: '/favicon.ico'\n        });\n      } catch (error) {\n        console.error('Error showing notification:', error);\n      }\n    }\n  };\n  const startBreak = () => {\n    setIsOnBreak(true);\n    setIsPaused(true);\n    setBreakTimer(settings.breakDuration * 60);\n    setBreaks(prev => prev + 1);\n    setLastBreak(0);\n\n    // Select a random break activity\n    const randomActivity = breakActivities[Math.floor(Math.random() * breakActivities.length)];\n    setCurrentActivity(randomActivity);\n\n    // Update statistics\n    setStats(prev => ({\n      ...prev,\n      totalBreaks: prev.totalBreaks + 1,\n      averageSessionLength: Math.round(prev.dailyScreenTime / (prev.totalBreaks + 1))\n    }));\n    showNotification(\"Break Started\", `Taking a ${settings.breakDuration} minute break. ${randomActivity.activity}`, true);\n  };\n  const skipBreak = () => {\n    endBreak();\n    showNotification(\"Break Skipped\", \"Break skipped. Try to take your next break on time!\", false);\n  };\n  const endBreak = () => {\n    setIsOnBreak(false);\n    setIsPaused(false);\n    setBreakTimer(0);\n    showNotification(\"Break Time Over!\", \"Time to get back to work. Remember to maintain good posture!\", true);\n  };\n  const formatTime = seconds => {\n    if (seconds < 60) {\n      return `${seconds}s`;\n    }\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    if (minutes < 60) {\n      return `${minutes}m ${remainingSeconds}s`;\n    }\n    const hours = Math.floor(minutes / 60);\n    const remainingMinutes = minutes % 60;\n    return `${hours}h ${remainingMinutes}m ${remainingSeconds}s`;\n  };\n  const getRiskLevel = () => {\n    const screenTimeMinutes = screenTime / 60; // Convert seconds to minutes\n    if (screenTimeMinutes >= settings.maxScreenTime) return 'high';\n    if (screenTimeMinutes >= settings.maxScreenTime * 0.7) return 'medium';\n    return 'low';\n  };\n  const getRecommendations = () => {\n    if (isOnBreak && currentActivity) {\n      return [`${formatTime(breakTimer)} of break time remaining`, currentActivity.activity, \"Stretch and move around\", stats.waterReminders ? \"Remember to stay hydrated\" : \"Take deep breaths\"];\n    }\n    const risk = getRiskLevel();\n    const screenTimeMinutes = screenTime / 60;\n    const timeLeft = settings.maxScreenTime - screenTimeMinutes;\n\n    // Daily progress\n    const dailyProgress = Math.round(stats.dailyScreenTime / (settings.dailyGoal * 60) * 100);\n    if (risk === 'high') {\n      return [`Daily Goal: ${dailyProgress}% (${formatTime(stats.dailyScreenTime)})`, `You've exceeded your ${settings.maxScreenTime} minute limit`, \"Please take a long break now\", `Longest session today: ${formatTime(stats.longestSession)}`];\n    }\n    if (risk === 'medium') {\n      return [`Daily Goal: ${dailyProgress}% (${formatTime(stats.dailyScreenTime)})`, `${Math.ceil(timeLeft)} minutes until max screen time`, `Taken ${stats.totalBreaks} breaks today`, `Average session: ${formatTime(stats.averageSessionLength)}`];\n    }\n    return [`Daily Goal: ${dailyProgress}% (${formatTime(stats.dailyScreenTime)})`, `${Math.ceil(timeLeft)} minutes until max screen time`, `Breaks today: ${stats.totalBreaks}`, stats.streaks > 0 ? `${stats.streaks} day streak!` : \"Start a healthy streak!\"];\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Calm Pulse\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: \"Calm Pulse - Take care of your mental health while working\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header center-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app-title rubik-doodle-font\",\n        children: [/*#__PURE__*/_jsxDEV(FiClock, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 11\n        }, this), \"Calm Pulse\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-actions\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"settings-button\",\n          onClick: () => setShowSettings(true),\n          title: \"Settings\",\n          children: /*#__PURE__*/_jsxDEV(FiSettings, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 7\n    }, this), showSettings && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings-modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settings-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"settings-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setShowSettings(false),\n            children: /*#__PURE__*/_jsxDEV(FiX, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 62\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"settings-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"setting-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Time Limits\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"setting-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Maximum Screen Time (minutes)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: settings.maxScreenTime,\n                onChange: e => setSettings(prev => ({\n                  ...prev,\n                  maxScreenTime: parseInt(e.target.value) || prev.maxScreenTime\n                })),\n                min: \"30\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 343,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"setting-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Break Interval (minutes)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: settings.breakInterval,\n                onChange: e => setSettings(prev => ({\n                  ...prev,\n                  breakInterval: parseInt(e.target.value) || prev.breakInterval\n                })),\n                min: \"15\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"setting-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Break Duration (minutes)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: settings.breakDuration,\n                onChange: e => setSettings(prev => ({\n                  ...prev,\n                  breakDuration: parseInt(e.target.value) || prev.breakDuration\n                })),\n                min: \"1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"setting-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Daily Screen Time Goal (minutes)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 378,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: settings.dailyGoal,\n                onChange: e => setSettings(prev => ({\n                  ...prev,\n                  dailyGoal: parseInt(e.target.value) || prev.dailyGoal\n                })),\n                min: \"60\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"setting-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Pomodoro Timer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"setting-item\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: settings.pomodoroEnabled,\n                  onChange: e => setSettings(prev => ({\n                    ...prev,\n                    pomodoroEnabled: e.target.checked\n                  }))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 395,\n                  columnNumber: 21\n                }, this), \"Enable Pomodoro Timer\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 394,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 17\n            }, this), settings.pomodoroEnabled && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"setting-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Work Duration (minutes)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 409,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  value: pomodoro.workDuration,\n                  onChange: e => setPomodoro(prev => ({\n                    ...prev,\n                    workDuration: parseInt(e.target.value) || prev.workDuration\n                  })),\n                  min: \"1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 410,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 408,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"setting-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Break Duration (minutes)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 421,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  value: pomodoro.breakDuration,\n                  onChange: e => setPomodoro(prev => ({\n                    ...prev,\n                    breakDuration: parseInt(e.target.value) || prev.breakDuration\n                  })),\n                  min: \"1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 422,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 420,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"setting-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Long Break Duration (minutes)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 433,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  value: pomodoro.longBreakDuration,\n                  onChange: e => setPomodoro(prev => ({\n                    ...prev,\n                    longBreakDuration: parseInt(e.target.value) || prev.longBreakDuration\n                  })),\n                  min: \"5\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 434,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 432,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"setting-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Notifications\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"setting-item\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: settings.notificationsEnabled,\n                  onChange: e => setSettings(prev => ({\n                    ...prev,\n                    notificationsEnabled: e.target.checked\n                  })),\n                  disabled: notificationPermission !== 'granted'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 452,\n                  columnNumber: 21\n                }, this), \"Enable Notifications\", notificationPermission !== 'granted' && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"permission-note\",\n                  children: notificationPermission === 'denied' ? ' (Please enable notifications in your browser settings)' : ' (Please allow notifications when prompted)'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 463,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 451,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 450,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"setting-item\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: settings.waterReminders,\n                  onChange: e => setSettings(prev => ({\n                    ...prev,\n                    waterReminders: e.target.checked\n                  }))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 473,\n                  columnNumber: 21\n                }, this), \"Water Break Reminders\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 472,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 471,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"setting-item\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: settings.exerciseReminders,\n                  onChange: e => setSettings(prev => ({\n                    ...prev,\n                    exerciseReminders: e.target.checked\n                  }))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 486,\n                  columnNumber: 21\n                }, this), \"Exercise Reminders\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 485,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 484,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"app-main\",\n      children: [/*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"tracking-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tracking-stats\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-card\",\n            children: [/*#__PURE__*/_jsxDEV(FiClock, {\n              className: \"stat-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 507,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Screen Time\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 509,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-value\",\n                children: formatTime(screenTime)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 510,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-subtext\",\n                children: [\"Daily: \", formatTime(stats.dailyScreenTime)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 511,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 508,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 506,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-card\",\n            children: [/*#__PURE__*/_jsxDEV(FiCoffee, {\n              className: \"stat-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 516,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Breaks Taken\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 518,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-value\",\n                children: breaks\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 519,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-subtext\",\n                children: [\"Today: \", stats.totalBreaks]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 520,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 517,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 515,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-card\",\n            children: [/*#__PURE__*/_jsxDEV(FiActivity, {\n              className: \"stat-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 525,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stat-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Last Break\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 527,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-value\",\n                children: [formatTime(lastBreak), \" ago\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 528,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat-subtext\",\n                children: [\"Avg: \", formatTime(stats.averageSessionLength)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 529,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 526,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 524,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 505,\n          columnNumber: 11\n        }, this), settings.pomodoroEnabled && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pomodoro-status\",\n          children: [/*#__PURE__*/_jsxDEV(FiTarget, {\n            className: \"pomodoro-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 536,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pomodoro-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"pomodoro-label\",\n              children: [isOnBreak ? 'Break' : 'Work', \" Session \", pomodoro.currentSession + 1, \"/\", pomodoro.sessionsBeforeLongBreak]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 538,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"pomodoro-progress\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"progress-bar\",\n                style: {\n                  width: `${screenTime / (pomodoro.workDuration * 60) * 100}%`\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 543,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 542,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 537,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"action-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `tracking-button ${isTracking ? 'active' : ''}`,\n            onClick: toggleTracking,\n            disabled: isOnBreak,\n            children: [isTracking ? /*#__PURE__*/_jsxDEV(FiPause, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 560,\n              columnNumber: 29\n            }, this) : /*#__PURE__*/_jsxDEV(FiPlay, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 560,\n              columnNumber: 43\n            }, this), isTracking ? 'Stop Tracking' : 'Start Tracking']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 555,\n            columnNumber: 13\n          }, this), isTracking && !isOnBreak && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"break-button\",\n            onClick: startBreak,\n            children: [/*#__PURE__*/_jsxDEV(FiCoffee, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 569,\n              columnNumber: 17\n            }, this), \"Take a Break\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 565,\n            columnNumber: 15\n          }, this), isOnBreak && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"skip-button\",\n            onClick: skipBreak,\n            children: \"Skip Break\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 575,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"status-section\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `status-card ${getRiskLevel()}`,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Current Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 587,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"status-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"status-level\",\n              children: [getRiskLevel() === 'low' && /*#__PURE__*/_jsxDEV(FiCheckCircle, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 590,\n                columnNumber: 46\n              }, this), getRiskLevel() === 'medium' && /*#__PURE__*/_jsxDEV(FiAlertCircle, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 591,\n                columnNumber: 49\n              }, this), getRiskLevel() === 'high' && /*#__PURE__*/_jsxDEV(FiAlertCircle, {\n                className: \"pulse\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 592,\n                columnNumber: 47\n              }, this), isOnBreak ? 'On Break' : `${getRiskLevel().charAt(0).toUpperCase() + getRiskLevel().slice(1)} Risk`]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 589,\n              columnNumber: 15\n            }, this), currentActivity && isOnBreak && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"current-activity\",\n              children: [currentActivity.icon, /*#__PURE__*/_jsxDEV(\"p\", {\n                children: currentActivity.activity\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 598,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 596,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"recommendations\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Recommendations\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 602,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: getRecommendations().map((rec, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: rec\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 605,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 603,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 601,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 588,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 586,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 585,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"app-footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Take care of your digital wellbeing \\u2764\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 615,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer-stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Streak: \", stats.streaks, \" days\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 617,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Weekly: \", formatTime(stats.weeklyScreenTime)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 618,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 616,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"sound-toggle\",\n        onClick: () => setSettings(prev => ({\n          ...prev,\n          soundEnabled: !prev.soundEnabled\n        })),\n        children: settings.soundEnabled ? /*#__PURE__*/_jsxDEV(FiVolume2, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 627,\n          columnNumber: 36\n        }, this) : /*#__PURE__*/_jsxDEV(FiVolumeX, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 627,\n          columnNumber: 52\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 620,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 614,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 314,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"4mtPEJDBEXbgb9QO3yuEvYmlzQE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Helmet","FiClock","FiCoffee","FiActivity","FiAlertCircle","FiCheckCircle","FiPause","FiPlay","FiSettings","FiVolume2","FiVolumeX","FiX","FiTarget","FiDroplet","FiEye","FiRefreshCw","jsxDEV","_jsxDEV","Fragment","_Fragment","breakActivities","type","icon","fileName","_jsxFileName","lineNumber","columnNumber","activity","duration","App","_s","screenTime","setScreenTime","breaks","setBreaks","lastBreak","setLastBreak","isTracking","setIsTracking","isPaused","setIsPaused","showSettings","setShowSettings","breakTimer","setBreakTimer","isOnBreak","setIsOnBreak","notificationPermission","setNotificationPermission","currentActivity","setCurrentActivity","workerRef","stats","setStats","dailyScreenTime","weeklyScreenTime","totalBreaks","averageSessionLength","longestSession","streaks","lastUpdate","Date","toISOString","split","pomodoro","setPomodoro","enabled","workDuration","breakDuration","longBreakDuration","sessionsBeforeLongBreak","currentSession","settings","setSettings","maxScreenTime","breakInterval","notificationsEnabled","soundEnabled","pomodoroEnabled","waterReminders","exerciseReminders","dailyGoal","current","Worker","onmessage","e","data","prev","Math","round","max","newTimer","endBreak","terminate","toggleTracking","postMessage","command","console","log","showNotification","savedStats","localStorage","getItem","savedSettings","parsedStats","JSON","parse","setItem","stringify","handleVisibilityChange","document","hidden","screenTimeMinutes","addEventListener","removeEventListener","requestNotificationPermission","window","permission","Notification","requestPermission","error","title","body","playSound","startBreak","randomActivity","floor","random","length","skipBreak","formatTime","seconds","minutes","remainingSeconds","hours","remainingMinutes","getRiskLevel","getRecommendations","risk","timeLeft","dailyProgress","ceil","className","children","name","content","onClick","value","onChange","parseInt","target","min","checked","disabled","style","width","charAt","toUpperCase","slice","map","rec","index","_c","$RefreshReg$"],"sources":["C:/Users/shrey/CascadeProjects/tech-breaks-mental-health-app/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { Helmet } from 'react-helmet';\nimport './App.css';\nimport { \n  FiClock, FiCoffee, FiActivity, FiAlertCircle, FiCheckCircle, \n  FiPause, FiPlay, FiSettings, FiVolume2, FiVolumeX, FiX,\n  FiTarget, FiDroplet, FiEye, FiRefreshCw\n} from 'react-icons/fi';\n\n// Break activities data\nconst breakActivities = [\n  { type: 'eye', icon: <FiEye />, activity: '20-20-20 Rule: Look 20ft away for 20s', duration: 20 },\n  { type: 'stretch', icon: <FiRefreshCw />, activity: 'Shoulder rolls and neck stretches', duration: 60 },\n  { type: 'walk', icon: <FiActivity />, activity: 'Take a short walk', duration: 300 },\n  { type: 'water', icon: <FiDroplet />, activity: 'Drink water and stand up', duration: 30 }\n];\n\nfunction App() {\n  const [screenTime, setScreenTime] = useState(0);\n  const [breaks, setBreaks] = useState(0);\n  const [lastBreak, setLastBreak] = useState(0);\n  const [isTracking, setIsTracking] = useState(false);\n  const [isPaused, setIsPaused] = useState(false);\n  const [showSettings, setShowSettings] = useState(false);\n  const [breakTimer, setBreakTimer] = useState(0);\n  const [isOnBreak, setIsOnBreak] = useState(false);\n  const [notificationPermission, setNotificationPermission] = useState('default');\n  const [currentActivity, setCurrentActivity] = useState(null);\n  const workerRef = useRef(null);\n\n  // Statistics tracking\n  const [stats, setStats] = useState({\n    dailyScreenTime: 0,\n    weeklyScreenTime: 0,\n    totalBreaks: 0,\n    averageSessionLength: 0,\n    longestSession: 0,\n    streaks: 0,\n    lastUpdate: new Date().toISOString().split('T')[0]\n  });\n\n  // Pomodoro settings\n  const [pomodoro, setPomodoro] = useState({\n    enabled: false,\n    workDuration: 25,\n    breakDuration: 5,\n    longBreakDuration: 15,\n    sessionsBeforeLongBreak: 4,\n    currentSession: 0\n  });\n  \n  const [settings, setSettings] = useState({\n    maxScreenTime: 120,\n    breakInterval: 30,\n    breakDuration: 5,\n    notificationsEnabled: true,\n    soundEnabled: true,\n    pomodoroEnabled: false,\n    waterReminders: true,\n    exerciseReminders: true,\n    dailyGoal: 480 // 8 hours\n  });\n\n  // Ensure worker and onmessage are set up only once\n  useEffect(() => {\n    workerRef.current = new Worker('timeWorker.js'); // Use public folder worker\n    workerRef.current.onmessage = (e) => {\n      if (e.data.type === 'tick') {\n        if (isTracking && !isPaused && !isOnBreak) {\n          setScreenTime(prev => prev + 1);\n          setLastBreak(prev => prev + 1);\n          setStats(prev => ({\n            ...prev,\n            dailyScreenTime: prev.dailyScreenTime + 1,\n            weeklyScreenTime: prev.weeklyScreenTime + 1,\n            averageSessionLength: Math.round((prev.dailyScreenTime + 1) / (prev.totalBreaks + 1)),\n            longestSession: Math.max(prev.longestSession, screenTime + 1)\n          }));\n        } else if (isOnBreak) {\n          setBreakTimer(prev => {\n            const newTimer = prev - 1;\n            if (newTimer <= 0) {\n              endBreak();\n              return 0;\n            }\n            return newTimer;\n          });\n        }\n      }\n    };\n    return () => {\n      workerRef.current.terminate();\n    };\n  }, []);\n\n  // Update toggleTracking to only send start/stop commands\n  const toggleTracking = () => {\n    if (!isTracking) {\n      setScreenTime(0); // Reset timer to 0 on start\n      setIsTracking(true);\n      setIsPaused(false);\n      workerRef.current.postMessage({ command: 'start' });\n      console.log('Tracking started');\n      showNotification(\n        \"Tracking Started\", \n        \"Screen time tracking has begun.\",\n        false\n      );\n    } else {\n      setIsTracking(false);\n      setIsPaused(false);\n      workerRef.current.postMessage({ command: 'stop' });\n      console.log('Tracking stopped');\n      showNotification(\n        \"Tracking Stopped\", \n        \"Screen time tracking has stopped.\",\n        false\n      );\n    }\n  };\n\n  // Load saved stats from localStorage\n  useEffect(() => {\n    const savedStats = localStorage.getItem('techBreaksStats');\n    const savedSettings = localStorage.getItem('techBreaksSettings');\n    \n    if (savedStats) {\n      const parsedStats = JSON.parse(savedStats);\n      // Reset daily stats if it's a new day\n      if (parsedStats.lastUpdate !== new Date().toISOString().split('T')[0]) {\n        setStats(prev => ({\n          ...prev,\n          dailyScreenTime: 0,\n          totalBreaks: 0,\n          lastUpdate: new Date().toISOString().split('T')[0]\n        }));\n      } else {\n        setStats(parsedStats);\n      }\n    }\n\n    if (savedSettings) {\n      setSettings(JSON.parse(savedSettings));\n    }\n  }, []);\n\n  // Save stats to localStorage when updated\n  useEffect(() => {\n    localStorage.setItem('techBreaksStats', JSON.stringify(stats));\n  }, [stats]);\n\n  // Save settings to localStorage when updated\n  useEffect(() => {\n    localStorage.setItem('techBreaksSettings', JSON.stringify(settings));\n  }, [settings]);\n\n  // Remove document visibility change handler since we're using Web Worker\n  useEffect(() => {\n    const handleVisibilityChange = () => {\n      // Only handle notifications when tab becomes visible\n      if (!document.hidden && isTracking) {\n        const screenTimeMinutes = screenTime / 60;\n        if (screenTimeMinutes >= settings.maxScreenTime) {\n          showNotification(\n            \"Maximum Screen Time Reached!\", \n            \"You've reached your maximum screen time limit. Consider taking a longer break.\",\n            true\n          );\n        }\n      }\n    };\n\n    document.addEventListener(\"visibilitychange\", handleVisibilityChange);\n    return () => document.removeEventListener(\"visibilitychange\", handleVisibilityChange);\n  }, [isTracking, screenTime, settings]);\n\n  // Request notification permission on mount\n  useEffect(() => {\n    const requestNotificationPermission = async () => {\n      if (\"Notification\" in window) {\n        try {\n          const permission = await Notification.requestPermission();\n          setNotificationPermission(permission);\n        } catch (error) {\n          console.error('Error requesting notification permission:', error);\n          setNotificationPermission('denied');\n        }\n      }\n    };\n    requestNotificationPermission();\n  }, []);\n\n  const showNotification = (title, body, playSound = false) => {\n    if (settings.notificationsEnabled && notificationPermission === 'granted') {\n      try {\n        new Notification(title, {\n          body,\n          icon: '/favicon.ico'\n        });\n      } catch (error) {\n        console.error('Error showing notification:', error);\n      }\n    }\n  };\n\n  const startBreak = () => {\n    setIsOnBreak(true);\n    setIsPaused(true);\n    setBreakTimer(settings.breakDuration * 60);\n    setBreaks(prev => prev + 1);\n    setLastBreak(0);\n    \n    // Select a random break activity\n    const randomActivity = breakActivities[Math.floor(Math.random() * breakActivities.length)];\n    setCurrentActivity(randomActivity);\n    \n    // Update statistics\n    setStats(prev => ({\n      ...prev,\n      totalBreaks: prev.totalBreaks + 1,\n      averageSessionLength: Math.round(prev.dailyScreenTime / (prev.totalBreaks + 1))\n    }));\n\n    showNotification(\n      \"Break Started\", \n      `Taking a ${settings.breakDuration} minute break. ${randomActivity.activity}`,\n      true\n    );\n  };\n\n  const skipBreak = () => {\n    endBreak();\n    showNotification(\n      \"Break Skipped\", \n      \"Break skipped. Try to take your next break on time!\",\n      false\n    );\n  };\n\n  const endBreak = () => {\n    setIsOnBreak(false);\n    setIsPaused(false);\n    setBreakTimer(0);\n    showNotification(\n      \"Break Time Over!\", \n      \"Time to get back to work. Remember to maintain good posture!\",\n      true\n    );\n  };\n\n  const formatTime = (seconds) => {\n    if (seconds < 60) {\n      return `${seconds}s`;\n    }\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    if (minutes < 60) {\n      return `${minutes}m ${remainingSeconds}s`;\n    }\n    const hours = Math.floor(minutes / 60);\n    const remainingMinutes = minutes % 60;\n    return `${hours}h ${remainingMinutes}m ${remainingSeconds}s`;\n  };\n\n  const getRiskLevel = () => {\n    const screenTimeMinutes = screenTime / 60; // Convert seconds to minutes\n    if (screenTimeMinutes >= settings.maxScreenTime) return 'high';\n    if (screenTimeMinutes >= settings.maxScreenTime * 0.7) return 'medium';\n    return 'low';\n  };\n\n  const getRecommendations = () => {\n    if (isOnBreak && currentActivity) {\n      return [\n        `${formatTime(breakTimer)} of break time remaining`,\n        currentActivity.activity,\n        \"Stretch and move around\",\n        stats.waterReminders ? \"Remember to stay hydrated\" : \"Take deep breaths\"\n      ];\n    }\n\n    const risk = getRiskLevel();\n    const screenTimeMinutes = screenTime / 60;\n    const timeLeft = settings.maxScreenTime - screenTimeMinutes;\n    \n    // Daily progress\n    const dailyProgress = Math.round((stats.dailyScreenTime / (settings.dailyGoal * 60)) * 100);\n    \n    if (risk === 'high') {\n      return [\n        `Daily Goal: ${dailyProgress}% (${formatTime(stats.dailyScreenTime)})`,\n        `You've exceeded your ${settings.maxScreenTime} minute limit`,\n        \"Please take a long break now\",\n        `Longest session today: ${formatTime(stats.longestSession)}`\n      ];\n    }\n    if (risk === 'medium') {\n      return [\n        `Daily Goal: ${dailyProgress}% (${formatTime(stats.dailyScreenTime)})`,\n        `${Math.ceil(timeLeft)} minutes until max screen time`,\n        `Taken ${stats.totalBreaks} breaks today`,\n        `Average session: ${formatTime(stats.averageSessionLength)}`\n      ];\n    }\n    return [\n      `Daily Goal: ${dailyProgress}% (${formatTime(stats.dailyScreenTime)})`,\n      `${Math.ceil(timeLeft)} minutes until max screen time`,\n      `Breaks today: ${stats.totalBreaks}`,\n      stats.streaks > 0 ? `${stats.streaks} day streak!` : \"Start a healthy streak!\"\n    ];\n  };\n\n  return (\n    <div className=\"app\">\n      <Helmet>\n        <title>Calm Pulse</title>\n        <meta name=\"description\" content=\"Calm Pulse - Take care of your mental health while working\" />\n      </Helmet>\n      <header className=\"app-header center-header\">\n        <div className=\"app-title rubik-doodle-font\">\n          <FiClock />\n          Calm Pulse\n        </div>\n        <div className=\"header-actions\">\n          <button className=\"settings-button\" onClick={() => setShowSettings(true)} title=\"Settings\">\n            <FiSettings />\n          </button>\n        </div>\n      </header>\n\n      {showSettings && (\n        <div className=\"settings-modal\">\n          <div className=\"settings-content\">\n            <div className=\"settings-header\">\n              <h2>Settings</h2>\n              <button onClick={() => setShowSettings(false)}><FiX /></button>\n            </div>\n            <div className=\"settings-body\">\n              <div className=\"setting-group\">\n                <h3>Time Limits</h3>\n                <div className=\"setting-item\">\n                  <label>Maximum Screen Time (minutes)</label>\n                  <input\n                    type=\"number\"\n                    value={settings.maxScreenTime}\n                    onChange={(e) => setSettings(prev => ({\n                      ...prev,\n                      maxScreenTime: parseInt(e.target.value) || prev.maxScreenTime\n                    }))}\n                    min=\"30\"\n                  />\n                </div>\n                <div className=\"setting-item\">\n                  <label>Break Interval (minutes)</label>\n                  <input\n                    type=\"number\"\n                    value={settings.breakInterval}\n                    onChange={(e) => setSettings(prev => ({\n                      ...prev,\n                      breakInterval: parseInt(e.target.value) || prev.breakInterval\n                    }))}\n                    min=\"15\"\n                  />\n                </div>\n                <div className=\"setting-item\">\n                  <label>Break Duration (minutes)</label>\n                  <input\n                    type=\"number\"\n                    value={settings.breakDuration}\n                    onChange={(e) => setSettings(prev => ({\n                      ...prev,\n                      breakDuration: parseInt(e.target.value) || prev.breakDuration\n                    }))}\n                    min=\"1\"\n                  />\n                </div>\n                <div className=\"setting-item\">\n                  <label>Daily Screen Time Goal (minutes)</label>\n                  <input\n                    type=\"number\"\n                    value={settings.dailyGoal}\n                    onChange={(e) => setSettings(prev => ({\n                      ...prev,\n                      dailyGoal: parseInt(e.target.value) || prev.dailyGoal\n                    }))}\n                    min=\"60\"\n                  />\n                </div>\n              </div>\n\n              <div className=\"setting-group\">\n                <h3>Pomodoro Timer</h3>\n                <div className=\"setting-item\">\n                  <label>\n                    <input\n                      type=\"checkbox\"\n                      checked={settings.pomodoroEnabled}\n                      onChange={(e) => setSettings(prev => ({\n                        ...prev,\n                        pomodoroEnabled: e.target.checked\n                      }))}\n                    />\n                    Enable Pomodoro Timer\n                  </label>\n                </div>\n                {settings.pomodoroEnabled && (\n                  <>\n                    <div className=\"setting-item\">\n                      <label>Work Duration (minutes)</label>\n                      <input\n                        type=\"number\"\n                        value={pomodoro.workDuration}\n                        onChange={(e) => setPomodoro(prev => ({\n                          ...prev,\n                          workDuration: parseInt(e.target.value) || prev.workDuration\n                        }))}\n                        min=\"1\"\n                      />\n                    </div>\n                    <div className=\"setting-item\">\n                      <label>Break Duration (minutes)</label>\n                      <input\n                        type=\"number\"\n                        value={pomodoro.breakDuration}\n                        onChange={(e) => setPomodoro(prev => ({\n                          ...prev,\n                          breakDuration: parseInt(e.target.value) || prev.breakDuration\n                        }))}\n                        min=\"1\"\n                      />\n                    </div>\n                    <div className=\"setting-item\">\n                      <label>Long Break Duration (minutes)</label>\n                      <input\n                        type=\"number\"\n                        value={pomodoro.longBreakDuration}\n                        onChange={(e) => setPomodoro(prev => ({\n                          ...prev,\n                          longBreakDuration: parseInt(e.target.value) || prev.longBreakDuration\n                        }))}\n                        min=\"5\"\n                      />\n                    </div>\n                  </>\n                )}\n              </div>\n\n              <div className=\"setting-group\">\n                <h3>Notifications</h3>\n                <div className=\"setting-item\">\n                  <label>\n                    <input\n                      type=\"checkbox\"\n                      checked={settings.notificationsEnabled}\n                      onChange={(e) => setSettings(prev => ({\n                        ...prev,\n                        notificationsEnabled: e.target.checked\n                      }))}\n                      disabled={notificationPermission !== 'granted'}\n                    />\n                    Enable Notifications\n                    {notificationPermission !== 'granted' && (\n                      <span className=\"permission-note\">\n                        {notificationPermission === 'denied' \n                          ? ' (Please enable notifications in your browser settings)'\n                          : ' (Please allow notifications when prompted)'}\n                      </span>\n                    )}\n                  </label>\n                </div>\n                <div className=\"setting-item\">\n                  <label>\n                    <input\n                      type=\"checkbox\"\n                      checked={settings.waterReminders}\n                      onChange={(e) => setSettings(prev => ({\n                        ...prev,\n                        waterReminders: e.target.checked\n                      }))}\n                    />\n                    Water Break Reminders\n                  </label>\n                </div>\n                <div className=\"setting-item\">\n                  <label>\n                    <input\n                      type=\"checkbox\"\n                      checked={settings.exerciseReminders}\n                      onChange={(e) => setSettings(prev => ({\n                        ...prev,\n                        exerciseReminders: e.target.checked\n                      }))}\n                    />\n                    Exercise Reminders\n                  </label>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      <main className=\"app-main\">\n        <section className=\"tracking-section\">\n          <div className=\"tracking-stats\">\n            <div className=\"stat-card\">\n              <FiClock className=\"stat-icon\" />\n              <div className=\"stat-info\">\n                <label>Screen Time</label>\n                <span className=\"stat-value\">{formatTime(screenTime)}</span>\n                <span className=\"stat-subtext\">Daily: {formatTime(stats.dailyScreenTime)}</span>\n              </div>\n            </div>\n\n            <div className=\"stat-card\">\n              <FiCoffee className=\"stat-icon\" />\n              <div className=\"stat-info\">\n                <label>Breaks Taken</label>\n                <span className=\"stat-value\">{breaks}</span>\n                <span className=\"stat-subtext\">Today: {stats.totalBreaks}</span>\n              </div>\n            </div>\n\n            <div className=\"stat-card\">\n              <FiActivity className=\"stat-icon\" />\n              <div className=\"stat-info\">\n                <label>Last Break</label>\n                <span className=\"stat-value\">{formatTime(lastBreak)} ago</span>\n                <span className=\"stat-subtext\">Avg: {formatTime(stats.averageSessionLength)}</span>\n              </div>\n            </div>\n          </div>\n\n          {settings.pomodoroEnabled && (\n            <div className=\"pomodoro-status\">\n              <FiTarget className=\"pomodoro-icon\" />\n              <div className=\"pomodoro-info\">\n                <span className=\"pomodoro-label\">\n                  {isOnBreak ? 'Break' : 'Work'} Session {pomodoro.currentSession + 1}/\n                  {pomodoro.sessionsBeforeLongBreak}\n                </span>\n                <div className=\"pomodoro-progress\">\n                  <div \n                    className=\"progress-bar\" \n                    style={{\n                      width: `${(screenTime / (pomodoro.workDuration * 60)) * 100}%`\n                    }}\n                  />\n                </div>\n              </div>\n            </div>\n          )}\n\n          <div className=\"action-buttons\">\n            <button \n              className={`tracking-button ${isTracking ? 'active' : ''}`}\n              onClick={toggleTracking}\n              disabled={isOnBreak}\n            >\n              {isTracking ? <FiPause /> : <FiPlay />}\n              {isTracking ? 'Stop Tracking' : 'Start Tracking'}\n            </button>\n\n            {isTracking && !isOnBreak && (\n              <button \n                className=\"break-button\"\n                onClick={startBreak}\n              >\n                <FiCoffee />\n                Take a Break\n              </button>\n            )}\n\n            {isOnBreak && (\n              <button \n                className=\"skip-button\"\n                onClick={skipBreak}\n              >\n                Skip Break\n              </button>\n            )}\n          </div>\n        </section>\n\n        <section className=\"status-section\">\n          <div className={`status-card ${getRiskLevel()}`}>\n            <h2>Current Status</h2>\n            <div className=\"status-info\">\n              <p className=\"status-level\">\n                {getRiskLevel() === 'low' && <FiCheckCircle />}\n                {getRiskLevel() === 'medium' && <FiAlertCircle />}\n                {getRiskLevel() === 'high' && <FiAlertCircle className=\"pulse\" />}\n                {isOnBreak ? 'On Break' : `${getRiskLevel().charAt(0).toUpperCase() + getRiskLevel().slice(1)} Risk`}\n              </p>\n              {currentActivity && isOnBreak && (\n                <div className=\"current-activity\">\n                  {currentActivity.icon}\n                  <p>{currentActivity.activity}</p>\n                </div>\n              )}\n              <div className=\"recommendations\">\n                <h3>Recommendations</h3>\n                <ul>\n                  {getRecommendations().map((rec, index) => (\n                    <li key={index}>{rec}</li>\n                  ))}\n                </ul>\n              </div>\n            </div>\n          </div>\n        </section>\n      </main>\n\n      <footer className=\"app-footer\">\n        <p>Take care of your digital wellbeing ❤️</p>\n        <div className=\"footer-stats\">\n          <span>Streak: {stats.streaks} days</span>\n          <span>Weekly: {formatTime(stats.weeklyScreenTime)}</span>\n        </div>\n        <button \n          className=\"sound-toggle\"\n          onClick={() => setSettings(prev => ({\n            ...prev,\n            soundEnabled: !prev.soundEnabled\n          }))}\n        >\n          {settings.soundEnabled ? <FiVolume2 /> : <FiVolumeX />}\n        </button>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}